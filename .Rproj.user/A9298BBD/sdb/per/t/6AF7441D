{
    "collab_server" : "",
    "contents" : "---\ntitle: \"lifequal: Calculating Life-table Lifespan Equality\"\nauthor: \"Jonas SchÃ¶ley\"\ndate: \"`r Sys.Date()`\"\noutput: rmarkdown::html_vignette\nvignette: >\n  %\\VignetteIndexEntry{Calculating Lifespan Equality from Life-tables}\n  %\\VignetteEngine{knitr::rmarkdown}\n  %\\VignetteEncoding{UTF-8}\n---\n\nHow to install\n--------------\n\nYou can install `lifequal` by running:\n\n```{r}\ninstall.packages(\"devtools\")\ndevtools::install_github(\"jschoeley/lifequal\")\n```\n\nWhat does it do?\n----------------\n\n`lifequal` lets you calculate three measures of lifespan equality from a life-table:\n\n  1) `ExDagger(x, ex, wx, ax)`\n  Life expectancy lost by those who die in age interval [x, x+w)\n  2) `EDagger(dx, exdagger, radix)`\n  Total life expectancy lost due to death\n  3) `KeyfzEntro(edagger, e0)`\n  Keyfitz's entropy\n\nThey are defined as follows,\n\n--------------------------------------------------------------------------------\nMeasure                                    Definition\n------------------------------------------ -------------------------------------\nStart of age interval                      $x$\n\nWidth of age interval starting at $x$      $w_x$\n\nStart of last age interval                 $\\omega$\n\nAverage time spent in age interval         $a_x$\n$[x, x+wx)$ when dying in that interval\n\nDeaths in age interval $[x, x+w_x)$        $d_x$\n\nLife-expectancy at age $x$                 $e_x$\n\nLife expectancy lost due to death in age   $e_x^\\dagger = \\frac {a_x} {w_x}e_{x+w_x} + (1-\\frac {a_x} {w_x}) e_x$\ninterval $[x, x+w_x)$\n\nTotal life expectancy lost due to death    $e^\\dagger = \\sum_{x=0}^{\\omega} d_x e_x^\\dagger$\n\nKeyfitz's Entropy                          $\\frac{e^\\dagger} {e_0}$\n--------------------------------------------------------------------------------\n\nLife expectancy versus lifespan equality for 1x1 Swedish life-tables\n--------------------------------------------------------------------\n\n```{r, message=FALSE, warning=FALSE}\nlibrary(lifequal)\nlibrary(dplyr)\nlibrary(ggplot2)\n```\n\nThe analysis starts with a demographic life-table. We want 1) age groups ordered from low to high, 2) no gaps between subsequent age groups. Something like this:\n\n```{r}\n# Swedish 1x1 period life-tables by period and sex\nsweden1x1\n```\n\nFirst, we use `ExDagger()` on each single life-table (separate by period and sex) to calculate the life expectancy lost in each age. We then summarise each life-table into a set of 3 numbers: Life expectancy at birth, total life years lost due to death (`EDagger()`) and lifespan equality (`KeyfzEntro()`). Note that we transform Keyfitz's Entropy by taking the negative log.\n\n```{r}\nsweden1x1 %>%\n  # ...for each single life-table...\n  group_by(period, sex) %>%\n  #...we calculate the life years lost in age x...\n  mutate(exdagger = ExDagger(x, ex)) %>%\n  # ...and then summarise each life-table into a set of 3 numbers:\n  # e0:         Life-expectancy at birth\n  # edagger:    Total life years lost due to death\n  # keyfzentro: Lifespan equality\n  summarise(\n    e0         = ex[x == 0],\n    edagger    = EDagger(dx, exdagger, radix = 100000),\n    keyfzentro = -log(KeyfzEntro(edagger, e0))\n  ) -> sweden1x1summary\n```\n\nThe summarised life-tables look like this:\n\n```{r}\nsweden1x1summary\n```\n\nFor each life-table we plot the life expectancy at birth versus the lifespan equality.\n\n```{r, fig.height=5, fig.width=5}\nplot_lifequal <-\n  ggplot(sweden1x1summary, aes(x = e0, y = keyfzentro, color = sex)) +\n  geom_point(size = 0.6, alpha = 0.5) +\n  theme(aspect.ratio = 1)\nplot_lifequal\n```\n\nLife expectancy versus lifespan equality for 5x5 Swedish life-tables\n--------------------------------------------------------------------\n\nThe same exercise as before, only now we deal with life-tables aggregated over multiple year period and age intervals.\n\n```{r}\n# Swedish 5x5 period life-tables by period and sex\nsweden5x5\n```\n\nWe deal with this aggregation by informing `ExDagger()` about $w_x$, the width of each age interval. This information is included in the column `wx` of our life-table.\n\n```{r}\nsweden5x5 %>%\n  # for practicality we assume a width of 2\n  # years for the last open age group 110+\n  mutate(wx = ifelse(is.na(wx), 2, wx)) %>%\n  # ...for each single life-table...\n  group_by(period, sex) %>%\n  #...we calculate the life years lost in age interval [x, x+wx)...\n  mutate(exdagger = ExDagger(x, ex, wx, ax)) %>%\n  # ...and then summarise each life-table into a set of 3 numbers:\n  # e0:         Life-expectancy at birth\n  # edagger:    Total life years lost due to death\n  # keyfzentro: Lifespan equality\n  summarise(\n    e0         = ex[x == 0],\n    edagger    = EDagger(dx, exdagger, radix = 100000),\n    keyfzentro = -log(KeyfzEntro(edagger, e0))\n  ) -> sweden5x5summary\n```\n\nThe summarised life-tables look like this:\n\n```{r}\nsweden5x5summary\n```\n\nThe aggregated life-tables follow the same trend as the single year life-tables.\n\n```{r, fig.height=5, fig.width=5}\nplot_lifequal +\n  geom_point(shape = 22, fill = \"white\",\n             data = sweden5x5summary)\n```",
    "created" : 1456409066872.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2188971202",
    "id" : "6AF7441D",
    "lastKnownWriteTime" : 1456485411,
    "last_content_update" : 1456485411214,
    "path" : "~/lucile/share/jowncloud/sci/rpckg/lifequal/vignettes/using_lifequal.Rmd",
    "project_path" : "vignettes/using_lifequal.Rmd",
    "properties" : {
        "docOutlineVisible" : "0"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}